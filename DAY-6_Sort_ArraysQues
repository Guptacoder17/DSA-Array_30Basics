1) Problem statement
Sort the given unsorted array 'arr' of size 'N' in non-decreasing order using the selection sort algorithm.



 Note:
Change in the input array/list itself. 


Example:
Input:
N = 5
arr = {8, 6, 2, 5, 1}

Output:
1 2 5 6 8 
----------------------------------------------------------------------
SOLUTION:
public class Solution {
    public static void selectionSort(int[] arr) {
        //Your code goes here
        int n = arr.length;
        for(int i=0; i<n-1; i++){
            int min_idx =i;
            for(int j= i+1; j<n; j++){
                if(arr[j]< arr[min_idx]){
                    min_idx = j;
                }
            }
             int temp = arr[min_idx];
                arr[min_idx] = arr[i];
                arr[i] = temp;
        }
    }
}
-------------------------------------------------------------------------------------
2) Problem statement || BUBBLE SORT
You are given an integer array 'arr' of size 'N'.



You must sort this array using 'Bubble Sort'.



Note:
Change in the input array itself. You don't need to return or print the elements.
Example:
Input: ‘N’ = 7
'arr' = [2, 13, 4, 1, 3, 6, 28]

Output: [1 2 3 4 6 13 28]

Explanation: After applying bubble sort on the input array, the output is [1 2 3 4 6 13 28].
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
7
2 13 4 1 3 6 28
Sample Output 1:
1 2 3 4 6 13 28
Explanation of Sample Output 1:
After applying bubble sort on the input array, the output is [1 2 3 4 6 13 28].
Sample Input 2:
5
9 3 6 2 0
Sample Output 2:
0 2 3 6 9
------------------------------------------------------------------------
SOLUTION:
public class Solution {
    public static void bubbleSort(int[] arr, int n) {
        //Your code goes here
        int i, j, temp;
        boolean swapped;
        for(i=0; i<n-1; i++){
            swapped = false;
            for(j=0; j<n-i-1; j++){
                if(arr[j]> arr[j+1]){
                    temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                    swapped = true;
                }
            }
            if (swapped == false){
                break;
            }
        }
    }

}
